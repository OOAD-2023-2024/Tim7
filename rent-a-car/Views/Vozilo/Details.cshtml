@model rent_a_car.Models.DetaljiVozilaViewModel

@{
    ViewData["Title"] = "Car Details";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/styles.css">
   <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            color: #343a40;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .car-image {
            width: 100%;
            max-width: 400px;
            height: auto;
            display: block;
            margin: 20px auto;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        th, td {
            padding: 10px;
            border-bottom: 1px solid #dee2e6;
        }

        th {
            background-color: #f8f9fa;
            font-weight: bold;
            text-align: left;
        }

        .reservation-form {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        label {
            font-weight: bold;
        }

        input[type="datetime-local"],
        select {
            width: 100%;
            padding: 8px;
            margin-top: 6px;
            margin-bottom: 16px;
            border: 1px solid #ced4da;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            background-color: #007bff;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #0056b3;
        }

        #paymentMethodContainer {
            display: flex;
            flex-direction: column;
        }

        #deliveryOption {
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>@ViewData["Title"]</h1>
        <img src="@Model.Vozilo.Slika" alt="Car Image" class="car-image" />
        <table>
            <tr>
                <td>Manufacturer</td>
                <td>@Model.Vozilo.Proizvodjac</td>
            </tr>
            <tr>
                <td>Model</td>
                <td>@Model.Vozilo.Model</td>
            </tr>
            <tr>
                <td>Description</td>
                <td>@Model.Vozilo.Opis</td>
            </tr>
            <tr>
                <td>Fuel</td>
                <td>@Model.Vozilo.Gorivo</td>
            </tr>
            <tr>
                <td>Transmission</td>
                <td>@Model.Vozilo.Transmisija</td>
            </tr>
            <tr>
                <td>Navigation</td>
                <td>@(Model.Vozilo.Navigacija ? "Yes" : "No")</td>
            </tr>
            @if (Model.Vozilo.Tip == TipVozila.PUTNICKO)
            {
                var putnicko = Model.Vozilo as PutnickoVozilo;
                if (putnicko != null)
                {
                    <tr>
                        <td>Tempomat</td>
                        <td>@(putnicko.Tempomat.HasValue ? (putnicko.Tempomat.Value ? "Yes" : "No") : "-")</td>
                    </tr>
                    <tr>
                        <td>Number of Seats</td>
                        <td>@(putnicko.BrojSjedista.HasValue ? putnicko.BrojSjedista.Value.ToString() : "-")</td>
                    </tr>
                }
            }
            else if (Model.Vozilo.Tip == TipVozila.TRANSPORTNO)
            {
                var transportno = Model.Vozilo as TransportnoVozilo;
                if (transportno != null)
                {
                    <tr>
                        <td>Vehicle Type</td>
                        <td>@transportno.Tip</td>
                    </tr>
                    <tr>
                        <td>Load Capacity</td>
                        <td>@(transportno.Nosivost.HasValue ? transportno.Nosivost.Value.ToString() : "-")</td>
                    </tr>
                    <tr>
                        <td>Length</td>
                        <td>@(transportno.Duzina.HasValue ? transportno.Duzina.Value.ToString() : "-")</td>
                    </tr>
                    <tr>
                        <td>Trailer</td>
                        <td>@(transportno.Prikolica.HasValue ? (transportno.Prikolica.Value ? "Yes" : "No") : "-")</td>
                    </tr>
                }
            }
            <tr>
                <td>Price for 24 Hours</td>
                <td>$@Model.Vozilo.Cijena</td>
            </tr>
        </table>

        <div class="reservation-form">
            <h2>Reservation Form</h2>
            <form id="reservationForm" action="#" method="post" onsubmit="calculateTotalPrice(); return false;">
                <div class="form-group">
                    <label for="pickupDate">Pickup Date and Time:</label>
                    <input type="datetime-local" id="pickupDate" name="pickupDate" required>
                </div>

                <div class="form-group">
                    <label for="returnDate">Return Date and Time:</label>
                    <input type="datetime-local" id="returnDate" name="returnDate" required>
                </div>

                <div class="form-group">
                    <label for="delivery">Delivery:</label>
                    <input type="checkbox" id="delivery" name="delivery" onchange="calculateTotalPrice()">
                </div>
                <div class="form-group" id="paymentMethodContainer">
                    <label for="paymentMethod">Payment Method:</label>
                    <select id="paymentMethod" name="paymentMethod">
                        <option value="pickup">Upon Pickup</option>
                        <option value="card">Credit/Debit Card</option>
                        <option value="delivery" id="deliveryOption" style="display: none;">Upon Delivery</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="totalPrice">Total Price:</label>
                    <input type="text" id="totalPrice" name="totalPrice" readonly>
                </div>

                <button type="submit">Go to Payment</button>
            </form>
        </div>


    <script>
        function calculateTotalPrice() {
            var pickupDate = new Date(document.getElementById("pickupDate").value);
            var returnDate = new Date(document.getElementById("returnDate").value);

            // Check if dates are valid
            if (isNaN(pickupDate) || isNaN(returnDate)) {
                document.getElementById("totalPrice").value = "$0.00";
                return;
            }

            var hoursDifference = Math.abs(returnDate - pickupDate) / 36e5;
            var priceFor24Hours = parseFloat("@Model.Vozilo.Cijena");

            var totalPrice = priceFor24Hours * Math.ceil(hoursDifference / 24);

            // Add delivery charge if selected
            if (document.getElementById("delivery").checked) {
                totalPrice += 35; // Example delivery charge
            }

            document.getElementById("totalPrice").value = "$" + totalPrice.toFixed(2);

            // Show or hide payment method option "Upon Delivery" based on delivery selection
            var deliveryOption = document.getElementById("deliveryOption");
            deliveryOption.style.display = document.getElementById("delivery").checked ? "block" : "none";

            // Set payment to "Upon Delivery" if delivery option is selected
            if (document.getElementById("delivery").checked) {
                document.getElementById("paymentMethod").value = "delivery";
            }
        }

        // Calculate total price when date inputs change
        document.getElementById("pickupDate").addEventListener("change", calculateTotalPrice);
        document.getElementById("returnDate").addEventListener("change", calculateTotalPrice);

        // Calculate total price on page load
        calculateTotalPrice();
    </script>
</body>
</html>
